{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Desaf\u00edo UPEIM Este es el sitio web de la documentaci\u00f3n del desaf\u00edo para ingreso a la Unidad de Proyectos Especiales Gesti\u00f3n de Infraestructura de la Movilidad del gobierno de la ciudad de Buenos Aires. Repositorio GIT El repositorio GIT del proyecto se encuentra en hospedado en Github Enlaces de navegaci\u00f3n de la documentaci\u00f3n Ver la documentaci\u00f3n para el backend (Servidor). Ver la documentaci\u00f3n para la base de datos . Ver la documentaci\u00f3n para el frontend (P\u00e1gina web). Ver la documentaci\u00f3n para mkdocs (Documentaci\u00f3n de esta p\u00e1gina web). Instrucciones del desaf\u00edo Repositorio Todo el c\u00f3digo deber\u00e1 estar guardado en alg\u00fan repositorio GIT (teniendo en cuenta buenas pr\u00e1cticas) junto a la documentaci\u00f3n del proyecto. Suma la realizaci\u00f3n de una estimaci\u00f3n en horas de cada tarea. Recordar indicar que paquetes se utilizaron y todos los pasos necesarios para ejecutar correctamente la aplicaci\u00f3n. Backend Desarrollar un servidor donde se exponga una API REST que permita en formato JSON dar una alta, baja, realizar una modificaci\u00f3n y traer el listado de empleados. Cada empleado deber\u00e1 tener: Nombre Completo Documento de identidad Fecha de nacimiento Si es o no desarrollador Una breve descripci\u00f3n \u00c1rea a la que pertenece Recuerda documentar cada endpoint que desarrolles. Base de datos Los datos deber\u00e1n ser almacenados en una base de datos, indicando en la documentaci\u00f3n el porqu\u00e9 de la elecci\u00f3n de la base de datos, el DER (Diagrama de Entidad Relaci\u00f3n), y las consultas SQL para realizar cada acci\u00f3n y creaci\u00f3n de la base. Nota : Las \u00e1reas deber\u00e1n estar en una tabla aparte. Frontend Desarrollar una p\u00e1gina web la cual tenga un formulario de alta de empleados, y otra donde est\u00e1n listados todos los empleados que fueron dados de alta, preferentemente utilizando alg\u00fan framework moderno (Angular, Vue \u00f3 React) Testeo autom\u00e1tico Utilizar alguna librer\u00eda moderna para realizar pruebas unitarias y/o funcionales de todo el c\u00f3digo desarrollado.","title":"Inicio"},{"location":"#desafio-upeim","text":"Este es el sitio web de la documentaci\u00f3n del desaf\u00edo para ingreso a la Unidad de Proyectos Especiales Gesti\u00f3n de Infraestructura de la Movilidad del gobierno de la ciudad de Buenos Aires.","title":"Desaf\u00edo UPEIM"},{"location":"#repositorio-git","text":"El repositorio GIT del proyecto se encuentra en hospedado en Github","title":"Repositorio GIT"},{"location":"#enlaces-de-navegacion-de-la-documentacion","text":"Ver la documentaci\u00f3n para el backend (Servidor). Ver la documentaci\u00f3n para la base de datos . Ver la documentaci\u00f3n para el frontend (P\u00e1gina web). Ver la documentaci\u00f3n para mkdocs (Documentaci\u00f3n de esta p\u00e1gina web).","title":"Enlaces de navegaci\u00f3n de la documentaci\u00f3n"},{"location":"#instrucciones-del-desafio","text":"","title":"Instrucciones del desaf\u00edo"},{"location":"#repositorio","text":"Todo el c\u00f3digo deber\u00e1 estar guardado en alg\u00fan repositorio GIT (teniendo en cuenta buenas pr\u00e1cticas) junto a la documentaci\u00f3n del proyecto. Suma la realizaci\u00f3n de una estimaci\u00f3n en horas de cada tarea. Recordar indicar que paquetes se utilizaron y todos los pasos necesarios para ejecutar correctamente la aplicaci\u00f3n.","title":"Repositorio"},{"location":"#backend","text":"Desarrollar un servidor donde se exponga una API REST que permita en formato JSON dar una alta, baja, realizar una modificaci\u00f3n y traer el listado de empleados. Cada empleado deber\u00e1 tener: Nombre Completo Documento de identidad Fecha de nacimiento Si es o no desarrollador Una breve descripci\u00f3n \u00c1rea a la que pertenece Recuerda documentar cada endpoint que desarrolles.","title":"Backend"},{"location":"#base-de-datos","text":"Los datos deber\u00e1n ser almacenados en una base de datos, indicando en la documentaci\u00f3n el porqu\u00e9 de la elecci\u00f3n de la base de datos, el DER (Diagrama de Entidad Relaci\u00f3n), y las consultas SQL para realizar cada acci\u00f3n y creaci\u00f3n de la base. Nota : Las \u00e1reas deber\u00e1n estar en una tabla aparte.","title":"Base de datos"},{"location":"#frontend","text":"Desarrollar una p\u00e1gina web la cual tenga un formulario de alta de empleados, y otra donde est\u00e1n listados todos los empleados que fueron dados de alta, preferentemente utilizando alg\u00fan framework moderno (Angular, Vue \u00f3 React)","title":"Frontend"},{"location":"#testeo-automatico","text":"Utilizar alguna librer\u00eda moderna para realizar pruebas unitarias y/o funcionales de todo el c\u00f3digo desarrollado.","title":"Testeo autom\u00e1tico"},{"location":"backend/","text":"Backend Dependencias La siguiente es una lista de dependencias requeridas por el servidor: express versi\u00f3n 4.18.1 sqlite3 versi\u00f3n 5.0.11 cors versi\u00f3n 2.8.5 jest versi\u00f3n 29.0.1 (\u00danicamente para desarrollo) Instalaci\u00f3n de dependencias Ingresar a la terminal en la carpeta backend y luego ingresar el siguiente comando: npm install Iniciando el servidor Debe primero ingresar a la carpeta backend del proyecto desde la terminal y luego escribir el siguiente comando: npm start Probando el c\u00f3digo Debe primero ingresar a la carpeta backend del proyecto desde la terminal y luego escribir el siguiente comando: npm test Documentaci\u00f3n de los endpoints /upeim/api/get-all-employees (M\u00e9todo GET) Obtiene la lista de todos los empleados de la base de datos. Ejemplo [ { \"id\": 1, \"nombreCompleto\": \"Agust\u00edn dos Santos\", \"documentoIdentidad\": 987654321, \"fechaNacimiento\": 19920714, \"esDesarrollador\": \"TRUE\", \"descripcion\": \"Desarrollador frontend\", \"area\": \"UPEIM\" }, { \"id\": 2, \"nombreCompleto\": \"Federico dos Santos\", \"documentoIdentidad\": 123456789, \"fechaNacimiento\": 19960906, \"esDesarrollador\": \"FALSE\", \"descripcion\": \"DataEntry\", \"area\": \"Globant\" } ] /upeim/api/get-employee-by-name (M\u00e9todo POST) Obtiene la lista de todos los empleados de la base de datos en cuyos casos coincidan con el par\u00e1metro nombreCompleto del cuerpo de la petici\u00f3n. Ejemplo { \"nombreCompleto\": \"Ag\" } Respuesta: [ { \"id\": 1, \"nombreCompleto\": \"Agust\u00edn dos Santos\", \"documentoIdentidad\": 987654321, \"fechaNacimiento\": 19920714, \"esDesarrollador\": \"TRUE\", \"descripcion\": \"Desarrollador frontend\", \"area\": \"UPEIM\" } ] /upeim/api/add-employee (M\u00e9todo POST) A\u00f1ade un empleado a la base de datos utilizando los par\u00e1metros del cuerpo de la petici\u00f3n. Si algunos de los par\u00e1metros es inv\u00e1lido retorna el resultado de petici\u00f3n err\u00f3nea al cliente. Ejemplo { \"nombreCompleto\": \"Agust\u00edn dos Santos\", \"documentoIdentidad\": 12345678, \"fechaNacimiento\": 19920714, \"esDesarrollador\": \"true\", \"descripcion\": \"Desarrollador frontend\", \"areaId\": 1 } /upeim/api/remove-employee (M\u00e9todo DELETE) Remueve un empleado de la base de datos utilizando el id del empleado en el cuerpo de la petici\u00f3n. Si el id en los par\u00e1metros es inv\u00e1lido retorna el resultado de petici\u00f3n err\u00f3nea al cliente. Ejemplo { \"id\": 1 } /upeim/api/edit-employee (M\u00e9todo POST) Actualiza los datos de un empleado de la base de datos utilizando el id del empleado y el resto de los par\u00e1metros en el cuerpo de la petici\u00f3n. Si alguno de los par\u00e1metros es inv\u00e1lido retorna el resultado de petici\u00f3n err\u00f3nea al cliente. Ejemplo [ { \"nombreCompleto\": \"Federico dos Santos\", \"documentoIdentidad\": 87654321, \"fechaNacimiento\": 19960906, \"esDesarrollador\": \"false\", \"descripcion\": \"Data entry\", \"areaId\": 1 } ] /upeim/api/get-all-areas (M\u00e9todo GET) Obtiene la lista de todas las \u00e1reas disponibles de la base de datos. Ejemplo [ { \"id\": 1, \"area\": \"SS. Gesti\u00f3n de la movilidad\" }, { \"id\": 2, \"area\": \"SS. Obras\" }, { \"id\": 3, \"area\": \"SS. Planificaci\u00f3n de la movilidad\" } ]","title":"Backend"},{"location":"backend/#backend","text":"","title":"Backend"},{"location":"backend/#dependencias","text":"La siguiente es una lista de dependencias requeridas por el servidor: express versi\u00f3n 4.18.1 sqlite3 versi\u00f3n 5.0.11 cors versi\u00f3n 2.8.5 jest versi\u00f3n 29.0.1 (\u00danicamente para desarrollo)","title":"Dependencias"},{"location":"backend/#instalacion-de-dependencias","text":"Ingresar a la terminal en la carpeta backend y luego ingresar el siguiente comando: npm install","title":"Instalaci\u00f3n de dependencias"},{"location":"backend/#iniciando-el-servidor","text":"Debe primero ingresar a la carpeta backend del proyecto desde la terminal y luego escribir el siguiente comando: npm start","title":"Iniciando el servidor"},{"location":"backend/#probando-el-codigo","text":"Debe primero ingresar a la carpeta backend del proyecto desde la terminal y luego escribir el siguiente comando: npm test","title":"Probando el c\u00f3digo"},{"location":"backend/#documentacion-de-los-endpoints","text":"","title":"Documentaci\u00f3n de los endpoints"},{"location":"backend/#upeimapiget-all-employees","text":"(M\u00e9todo GET) Obtiene la lista de todos los empleados de la base de datos.","title":"/upeim/api/get-all-employees"},{"location":"backend/#ejemplo","text":"[ { \"id\": 1, \"nombreCompleto\": \"Agust\u00edn dos Santos\", \"documentoIdentidad\": 987654321, \"fechaNacimiento\": 19920714, \"esDesarrollador\": \"TRUE\", \"descripcion\": \"Desarrollador frontend\", \"area\": \"UPEIM\" }, { \"id\": 2, \"nombreCompleto\": \"Federico dos Santos\", \"documentoIdentidad\": 123456789, \"fechaNacimiento\": 19960906, \"esDesarrollador\": \"FALSE\", \"descripcion\": \"DataEntry\", \"area\": \"Globant\" } ]","title":"Ejemplo"},{"location":"backend/#upeimapiget-employee-by-name","text":"(M\u00e9todo POST) Obtiene la lista de todos los empleados de la base de datos en cuyos casos coincidan con el par\u00e1metro nombreCompleto del cuerpo de la petici\u00f3n.","title":"/upeim/api/get-employee-by-name"},{"location":"backend/#ejemplo_1","text":"{ \"nombreCompleto\": \"Ag\" } Respuesta: [ { \"id\": 1, \"nombreCompleto\": \"Agust\u00edn dos Santos\", \"documentoIdentidad\": 987654321, \"fechaNacimiento\": 19920714, \"esDesarrollador\": \"TRUE\", \"descripcion\": \"Desarrollador frontend\", \"area\": \"UPEIM\" } ]","title":"Ejemplo"},{"location":"backend/#upeimapiadd-employee","text":"(M\u00e9todo POST) A\u00f1ade un empleado a la base de datos utilizando los par\u00e1metros del cuerpo de la petici\u00f3n. Si algunos de los par\u00e1metros es inv\u00e1lido retorna el resultado de petici\u00f3n err\u00f3nea al cliente.","title":"/upeim/api/add-employee"},{"location":"backend/#ejemplo_2","text":"{ \"nombreCompleto\": \"Agust\u00edn dos Santos\", \"documentoIdentidad\": 12345678, \"fechaNacimiento\": 19920714, \"esDesarrollador\": \"true\", \"descripcion\": \"Desarrollador frontend\", \"areaId\": 1 }","title":"Ejemplo"},{"location":"backend/#upeimapiremove-employee","text":"(M\u00e9todo DELETE) Remueve un empleado de la base de datos utilizando el id del empleado en el cuerpo de la petici\u00f3n. Si el id en los par\u00e1metros es inv\u00e1lido retorna el resultado de petici\u00f3n err\u00f3nea al cliente.","title":"/upeim/api/remove-employee"},{"location":"backend/#ejemplo_3","text":"{ \"id\": 1 }","title":"Ejemplo"},{"location":"backend/#upeimapiedit-employee","text":"(M\u00e9todo POST) Actualiza los datos de un empleado de la base de datos utilizando el id del empleado y el resto de los par\u00e1metros en el cuerpo de la petici\u00f3n. Si alguno de los par\u00e1metros es inv\u00e1lido retorna el resultado de petici\u00f3n err\u00f3nea al cliente.","title":"/upeim/api/edit-employee"},{"location":"backend/#ejemplo_4","text":"[ { \"nombreCompleto\": \"Federico dos Santos\", \"documentoIdentidad\": 87654321, \"fechaNacimiento\": 19960906, \"esDesarrollador\": \"false\", \"descripcion\": \"Data entry\", \"areaId\": 1 } ]","title":"Ejemplo"},{"location":"backend/#upeimapiget-all-areas","text":"(M\u00e9todo GET) Obtiene la lista de todas las \u00e1reas disponibles de la base de datos.","title":"/upeim/api/get-all-areas"},{"location":"backend/#ejemplo_5","text":"[ { \"id\": 1, \"area\": \"SS. Gesti\u00f3n de la movilidad\" }, { \"id\": 2, \"area\": \"SS. Obras\" }, { \"id\": 3, \"area\": \"SS. Planificaci\u00f3n de la movilidad\" } ]","title":"Ejemplo"},{"location":"database/","text":"Base de datos Elecci\u00f3n de base de datos Se ha elegido el tipo de base de datos sqlite3 por su sencillez para proyectos peque\u00f1os como este. Para proyectos donde se requiere por lo general mucho almacenamiento escoger\u00eda MariaDB. Diagrama Entidad Relaci\u00f3n Se ha creado dos tablas seg\u00fan lo requerido, una para los empleados y la segunda tabla para el \u00e1rea del sector que pertenece el empleado. En ambos casos las columnas id son Primary key , la columna esDesarrollador es de tipo entero debido a que sqlite3 soporta booleanos a trav\u00e9s de valores enteros. En la tabla empleados la columna areaId es una Foreign key relacionada con el id de la tabla oficina. Consultas SQL Creaci\u00f3n de la base de datos CREATE TABLE \"empleados\" ( \"id\" INTEGER NOT NULL UNIQUE, \"nombreCompleto\" TEXT NOT NULL, \"documentoIdentidad\" INTEGER NOT NULL UNIQUE, \"fechaNacimiento\" INTEGER NOT NULL, \"esDesarrollador\" INTEGER NOT NULL, \"descripcion\" TEXT NOT NULL, \"areaId\" INTEGER NOT NULL, FOREIGN KEY(\"areaId\") REFERENCES \"oficina\"(\"id\"), PRIMARY KEY(\"id\" AUTOINCREMENT) ); CREATE TABLE \"oficina\" ( \"id\" INTEGER NOT NULL UNIQUE, \"area\" TEXT NOT NULL, PRIMARY KEY(\"id\" AUTOINCREMENT) ); Obtener datos de los empleados de la base de datos La siguiente instrucci\u00f3n obtiene todos los empleados y el \u00e1rea a la cual pertenece. SELECT empleados.id, empleados.nombreCompleto, empleados.documentoIdentidad, empleados.fechaNacimiento, empleados.esDesarrollador, empleados.descripcion, oficina.areaFROM empleados INNER JOIN oficina WHERE empleados.areaId = oficina.id La siguiente instrucci\u00f3n obtiene todos los empleados y el \u00e1rea a la cual pertenece filtrando por su nombre. SELECT empleados.id, empleados.nombreCompleto, empleados.documentoIdentidad, empleados.fechaNacimiento, empleados.esDesarrollador, empleados.descripcion, oficina.area FROM empleados INNER JOIN oficina WHERE empleados.nombreCompleto like '%Nombre a buscar%' AND empleados.areaId = oficina.id Modificar de los empleados la base de datos La siguiente instrucci\u00f3n de ejemplo agrega un empleado a la base de datos. INSERT INTO \"empleados\" (\"nombreCompleto\", \"documentoIdentidad\", \"fechaNacimiento\", \"esDesarrollador\", \"descripcion\", \"areaId\") VALUES ('Agust\u00edn dos Santos', 123456789, 19920714, 'TRUE', 'Desarrollador frontend', 1); La siguiente instrucci\u00f3n de ejemplo modifica un empleado mediante su n\u00famero de identificaci\u00f3n de la base de datos. UPDATE \"empleados\" SET \"nombreCompleto\" = \"Federico dos Santos\", \"documentoIdentidad\" = '987654321', \"fechaNacimiento\" = '19960906', \"esDesarrollador\" = 'FALSE', \"descripcion\" = \"DataEntry\", \"areaId\" = '1' WHERE empleados.id = 1 La siguiente instrucci\u00f3n de ejemplo elimina un empleado mediante su n\u00famero de identificaci\u00f3n de la base de datos. DELETE FROM \"empleados\" WHERE id = 1; \u00c1rea de empleados La siguiente instrucci\u00f3n de ejemplo obtiene la identifiaci\u00f3n y el nombre todas las \u00e1reas disponible de la base de datos. SELECT * FROM \"oficina\" La siguiente instrucci\u00f3n de ejemplo a\u00f1ade un \u00e1rea a la tabla oficina de la base de datos. INSERT INTO oficina(\"area\") VALUES ('SS. Gesti\u00f3n de la movilidad')","title":"Base de datos"},{"location":"database/#base-de-datos","text":"","title":"Base de datos"},{"location":"database/#eleccion-de-base-de-datos","text":"Se ha elegido el tipo de base de datos sqlite3 por su sencillez para proyectos peque\u00f1os como este. Para proyectos donde se requiere por lo general mucho almacenamiento escoger\u00eda MariaDB.","title":"Elecci\u00f3n de base de datos"},{"location":"database/#diagrama-entidad-relacion","text":"Se ha creado dos tablas seg\u00fan lo requerido, una para los empleados y la segunda tabla para el \u00e1rea del sector que pertenece el empleado. En ambos casos las columnas id son Primary key , la columna esDesarrollador es de tipo entero debido a que sqlite3 soporta booleanos a trav\u00e9s de valores enteros. En la tabla empleados la columna areaId es una Foreign key relacionada con el id de la tabla oficina.","title":"Diagrama Entidad Relaci\u00f3n"},{"location":"database/#consultas-sql","text":"","title":"Consultas SQL"},{"location":"database/#creacion-de-la-base-de-datos","text":"CREATE TABLE \"empleados\" ( \"id\" INTEGER NOT NULL UNIQUE, \"nombreCompleto\" TEXT NOT NULL, \"documentoIdentidad\" INTEGER NOT NULL UNIQUE, \"fechaNacimiento\" INTEGER NOT NULL, \"esDesarrollador\" INTEGER NOT NULL, \"descripcion\" TEXT NOT NULL, \"areaId\" INTEGER NOT NULL, FOREIGN KEY(\"areaId\") REFERENCES \"oficina\"(\"id\"), PRIMARY KEY(\"id\" AUTOINCREMENT) ); CREATE TABLE \"oficina\" ( \"id\" INTEGER NOT NULL UNIQUE, \"area\" TEXT NOT NULL, PRIMARY KEY(\"id\" AUTOINCREMENT) );","title":"Creaci\u00f3n de la base de datos"},{"location":"database/#obtener-datos-de-los-empleados-de-la-base-de-datos","text":"La siguiente instrucci\u00f3n obtiene todos los empleados y el \u00e1rea a la cual pertenece. SELECT empleados.id, empleados.nombreCompleto, empleados.documentoIdentidad, empleados.fechaNacimiento, empleados.esDesarrollador, empleados.descripcion, oficina.areaFROM empleados INNER JOIN oficina WHERE empleados.areaId = oficina.id La siguiente instrucci\u00f3n obtiene todos los empleados y el \u00e1rea a la cual pertenece filtrando por su nombre. SELECT empleados.id, empleados.nombreCompleto, empleados.documentoIdentidad, empleados.fechaNacimiento, empleados.esDesarrollador, empleados.descripcion, oficina.area FROM empleados INNER JOIN oficina WHERE empleados.nombreCompleto like '%Nombre a buscar%' AND empleados.areaId = oficina.id","title":"Obtener datos de los empleados de la base de datos"},{"location":"database/#modificar-de-los-empleados-la-base-de-datos","text":"La siguiente instrucci\u00f3n de ejemplo agrega un empleado a la base de datos. INSERT INTO \"empleados\" (\"nombreCompleto\", \"documentoIdentidad\", \"fechaNacimiento\", \"esDesarrollador\", \"descripcion\", \"areaId\") VALUES ('Agust\u00edn dos Santos', 123456789, 19920714, 'TRUE', 'Desarrollador frontend', 1); La siguiente instrucci\u00f3n de ejemplo modifica un empleado mediante su n\u00famero de identificaci\u00f3n de la base de datos. UPDATE \"empleados\" SET \"nombreCompleto\" = \"Federico dos Santos\", \"documentoIdentidad\" = '987654321', \"fechaNacimiento\" = '19960906', \"esDesarrollador\" = 'FALSE', \"descripcion\" = \"DataEntry\", \"areaId\" = '1' WHERE empleados.id = 1 La siguiente instrucci\u00f3n de ejemplo elimina un empleado mediante su n\u00famero de identificaci\u00f3n de la base de datos. DELETE FROM \"empleados\" WHERE id = 1;","title":"Modificar de los empleados la base de datos"},{"location":"database/#area-de-empleados","text":"La siguiente instrucci\u00f3n de ejemplo obtiene la identifiaci\u00f3n y el nombre todas las \u00e1reas disponible de la base de datos. SELECT * FROM \"oficina\" La siguiente instrucci\u00f3n de ejemplo a\u00f1ade un \u00e1rea a la tabla oficina de la base de datos. INSERT INTO oficina(\"area\") VALUES ('SS. Gesti\u00f3n de la movilidad')","title":"\u00c1rea de empleados"},{"location":"documentation/","text":"Mkdocs El software de generaci\u00f3n de la documentaci\u00f3n del proyecto del desaf\u00edo para generar la p\u00e1gina que est\u00e1 usted viendo actualmente se llama mkdocs . Instalaci\u00f3n de mkdocs Requisitos recomendados Python versi\u00f3n 3.10.5 Comandos para instalar mkdocs pip install mkdocs Previsualizar la documentaci\u00f3n Una vez instalado mkdocs ingrese a la carpeta documentacion del repositorio GIT y escriba en la terminal lo siguiente mkdocs serve Ingrese luego con su navegador de internet de preferencia a la siguiente ubicaci\u00f3n http://localhost:8000 Compilaci\u00f3n de la documentaci\u00f3n Una vez instalado mkdocs ingrese a la carpeta documentacion del repositorio GIT y escriba en la terminal lo siguiente mkdocs build La p\u00e1gina web que usted est\u00e1 viendo en este preciso momento deber\u00eda estar generada en la carpeta site .","title":"Documentaci\u00f3n de esta p\u00e1gina"},{"location":"documentation/#mkdocs","text":"El software de generaci\u00f3n de la documentaci\u00f3n del proyecto del desaf\u00edo para generar la p\u00e1gina que est\u00e1 usted viendo actualmente se llama mkdocs .","title":"Mkdocs"},{"location":"documentation/#instalacion-de-mkdocs","text":"","title":"Instalaci\u00f3n de mkdocs"},{"location":"documentation/#requisitos-recomendados","text":"Python versi\u00f3n 3.10.5","title":"Requisitos recomendados"},{"location":"documentation/#comandos-para-instalar-mkdocs","text":"pip install mkdocs","title":"Comandos para instalar mkdocs"},{"location":"documentation/#previsualizar-la-documentacion","text":"Una vez instalado mkdocs ingrese a la carpeta documentacion del repositorio GIT y escriba en la terminal lo siguiente mkdocs serve Ingrese luego con su navegador de internet de preferencia a la siguiente ubicaci\u00f3n http://localhost:8000","title":"Previsualizar la documentaci\u00f3n"},{"location":"documentation/#compilacion-de-la-documentacion","text":"Una vez instalado mkdocs ingrese a la carpeta documentacion del repositorio GIT y escriba en la terminal lo siguiente mkdocs build La p\u00e1gina web que usted est\u00e1 viendo en este preciso momento deber\u00eda estar generada en la carpeta site .","title":"Compilaci\u00f3n de la documentaci\u00f3n"},{"location":"frontend/","text":"Frontend Dependencias La siguiente es una lista de dependencias requeridas por el servidor: @testing-library/jest-dom versi\u00f3n 5.16.5 @testing-library/react versi\u00f3n 13.3.0 @testing-library/user-event versi\u00f3n 13.5.0 bootstrap versi\u00f3n 5.2.0 react versi\u00f3n 18.2.0 react-bootstrap versi\u00f3n 2.5.0 react-dom versi\u00f3n 18.2.0 react-hot-toast versi\u00f3n 2.3.0 react-router-dom versi\u00f3n 6.3.0 react-scripts versi\u00f3n 5.0.1 web-vitals versi\u00f3n 2.1.4 Instalaci\u00f3n de dependencias Ingresar a la terminal en la carpeta frontend y luego ingresar el siguiente comando: npm install Iniciar, construir y pruebas unitarias el frontend Importante Recuerde primero iniciar el backend antes de realizar el entorno de desarrollo en vivo y/o construir y utilizar un servidor local en su computadora. Entorno de desarrollo en vivo Para probar el frontend primero debe ingresar a la terminal en la carpeta frontend y finalmente ingresar el siguiente comando: npm start Construir el proyecto Para construir el frontend primero debe ingresar a la terminal en la carpeta frontend y finalmente ingresar el siguiente comando: npm run build Pruebas del proyecto Para probar el frontend primero debe ingresar a la terminal en la carpeta frontend y finalmente ingresar el siguiente comando: npm test","title":"Frontend"},{"location":"frontend/#frontend","text":"","title":"Frontend"},{"location":"frontend/#dependencias","text":"La siguiente es una lista de dependencias requeridas por el servidor: @testing-library/jest-dom versi\u00f3n 5.16.5 @testing-library/react versi\u00f3n 13.3.0 @testing-library/user-event versi\u00f3n 13.5.0 bootstrap versi\u00f3n 5.2.0 react versi\u00f3n 18.2.0 react-bootstrap versi\u00f3n 2.5.0 react-dom versi\u00f3n 18.2.0 react-hot-toast versi\u00f3n 2.3.0 react-router-dom versi\u00f3n 6.3.0 react-scripts versi\u00f3n 5.0.1 web-vitals versi\u00f3n 2.1.4","title":"Dependencias"},{"location":"frontend/#instalacion-de-dependencias","text":"Ingresar a la terminal en la carpeta frontend y luego ingresar el siguiente comando: npm install","title":"Instalaci\u00f3n de dependencias"},{"location":"frontend/#iniciar-construir-y-pruebas-unitarias-el-frontend","text":"","title":"Iniciar, construir y pruebas unitarias el frontend"},{"location":"frontend/#importante","text":"Recuerde primero iniciar el backend antes de realizar el entorno de desarrollo en vivo y/o construir y utilizar un servidor local en su computadora.","title":"Importante"},{"location":"frontend/#entorno-de-desarrollo-en-vivo","text":"Para probar el frontend primero debe ingresar a la terminal en la carpeta frontend y finalmente ingresar el siguiente comando: npm start","title":"Entorno de desarrollo en vivo"},{"location":"frontend/#construir-el-proyecto","text":"Para construir el frontend primero debe ingresar a la terminal en la carpeta frontend y finalmente ingresar el siguiente comando: npm run build","title":"Construir el proyecto"},{"location":"frontend/#pruebas-del-proyecto","text":"Para probar el frontend primero debe ingresar a la terminal en la carpeta frontend y finalmente ingresar el siguiente comando: npm test","title":"Pruebas del proyecto"}]}